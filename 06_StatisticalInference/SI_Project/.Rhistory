hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = "blue")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col="red", lty=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c("blue", "red"))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = "blue")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col="red", lty=5)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c("blue", "red"))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 3)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col="red", lty=10)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c("blue", "red"))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 3)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 5)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main ="Exponential Distribution n = 1000",
xlab ="Spread")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col = 6, lwd=2)
legend('topright', c("Theoretical Curve"), lty=1,lwd=2, col=3)
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main ="Exponential Distribution n = 1000",
xlab ="Spread")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col = 3, lwd=2)
legend('topright', c("Theoretical Curve"), lty=1,lwd=2, col=3)
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, col=3)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=1)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2)
legend('topright', c("Theoretical Values", "Simulated Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=4)
legend('topright', c("Theoretical Values", "Simulated Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Theoretical Values", "Simulated Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean))
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, col=3, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Theoretical Values", "Simulated Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Theoretical Values", "Simulated Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(4,3))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main ="Exponential Distribution n = 1000",
xlab ="Spread")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col = 4, lwd=2)
legend('topright', c("Theoretical Curve"), lty=2,lwd=2, col=4)
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main ="Exponential Distribution n = 1000",
xlab ="Spread")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Theoretical Curve"), lty=2,lwd=2, col=4)
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
qqnorm(sim$Mean,
main="Normal Q-Q Plot")
qqline(sim$Mean,
col="3")
qqnorm(sim$Mean,
main="Normal Q-Q Plot")
qqline(sim$Mean,
col="4")
lambda <- 0.2
n <- 40
nosim <- 1000
set.seed(756)
exp_sim <- function(n, lambda)
{
mean(rexp(n,lambda))
}
sim <- data.frame(ncol=2,nrow=1000)
names(sim) <- c("Index","Mean")
for (i in 1:nosim)
{
sim[i,1] <- i
sim[i,2] <- exp_sim(n,lambda)
}
sample_mean <- mean(sim$Mean)
sample_mean
exp_dis <- matrix(data=rexp(n * nosim, lambda), nrow=nosim)
exp_dis_means <- data.frame(means=apply(exp_dis, 1, mean))
ggplot(data = exp_dis_means, aes(x = means)) +
geom_histogram(binwidth=0.1) +
scale_x_continuous(breaks=round(seq(min(exp_dis_means$means), max(exp_dis_means$means), by=1)))
theor_mean <- 1/lambda
theor_mean
hist(sim$Mean,
breaks=100,
prob=TRUE,
main="Exponential Distribution n = 1000",
xlab="Spread")
abline(v = theor_mean,
col= 3,
lwd = 2)
abline(v = sample_mean,
col = 2,
lwd = 2)
legend('topright', c("Sample Mean", "Theoretical Mean"),
lty=c(1,1),
bty = "n",
col = c(col=3, col=2))
hist(sim$Mean,
breaks=100,
prob=TRUE,
main="Exponential Distribution n = 1000",
xlab="Spread")
abline(v = theor_mean,
col= 4,
lwd = 2)
abline(v = sample_mean,
col = 2,
lwd = 2)
legend('topright', c("Sample Mean", "Theoretical Mean"),
lty=c(1,1),
bty = "n",
col = c(col=4, col=2))
hist(sim$Mean,
breaks=100,
prob=TRUE,
main="Exponential Distribution n = 1000",
xlab="Spread")
abline(v = theor_mean,
col= 3,
lwd = 2)
abline(v = sample_mean,
col = 4,
lwd = 2)
legend('topright', c("Sample Mean", "Theoretical Mean"),
lty=c(1,1),
bty = "n",
col = c(col=3, col=4))
hist(sim$Mean,
breaks=100,
prob=TRUE,
main="Exponential Distribution n = 1000",
xlab="Spread")
abline(v = theor_mean,
col= 4,
lwd = 2)
abline(v = sample_mean,
col = 2,
lwd = 2)
legend('topright', c("Sample Mean", "Theoretical Mean"),
lty=c(1,1),
bty = "n",
col = c(col=2, col=4))
sample_var <- var(sim$Mean)
theor_var <- ((1/lambda)^2)/40
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main ="Exponential Distribution n = 1000",
xlab ="Spread")
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Theoretical Curve"), lty=2,lwd=2, col=4)
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 6, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=1)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
qqnorm(sim$Mean,
main="Normal Q-Q Plot")
qqline(sim$Mean,
col="4")
theor_var <- ((1/lambda)^2)/n
theor_var
sample_var <- var(sim$Mean)
sample_var
exp_dis <- matrix(data=rexp(n * nosim, lambda), nrow=nosim)
exp_dis_means <- data.frame(means=apply(exp_dis, 1, mean))
ggplot(data = exp_dis_means, aes(x = means)) +
geom_histogram(binwidth=0.1) +
ggtitle("Hiistogram of Sample Means") +
scale_x_continuous(breaks=round(seq(min(exp_dis_means$means), max(exp_dis_means$means), by=1)))
mu <- 1/lambda
mu
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"),bty="n", lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"), lty=c(1,2), col=c(3,4))
hist(sim$Mean,
breaks = 100,
prob = TRUE,
main = "Distribution of Simulated Exponential Distribution", xlab="")
lines(density(sim$Mean), col=3, lwd=2)
abline(v = 1/lambda, col = 4, lwd=4)
xfit <- seq(min(sim$Mean), max(sim$Mean), length = 100)
yfit <- dnorm(xfit, mean = 1/lambda, sd = (1/lambda/sqrt(40)))
lines(xfit, yfit, pch=22, col=4, lty=2, lwd=2)
legend('topright', c("Simulated Values", "Theoretical Values"),bty="n", lty=c(1,2), col=c(3,4))
library(ggplot2)
library(dplyr)
library(knitr)
library(datasets)
data(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth)
tail(ToothGrowth)
summary(toothGrowth)
summary(ToothGrowth)
dim(ToothGrowth)
toothGrowth <- ToothGrowth
dim(toothGrowth)
sample_size <- length(toothGrowth$len)
sample_size
table(toothGrowth$supp, toothGrowth$dose)
p1 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~supp)
p2 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~dose)
p3 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot()
p4 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot()
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
library(gridExtra)
library(GGally)
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
library(dplyr)
library(ggplot2)
library(datasets)
library(gridExtra)
library(GGally)
library(ggplot2)
library(knitr)
library(datasets)
library(gridExtra)
library(GGally)
data(ToothGrowth)
toothGrowth <- ToothGrowth
str(toothGrowth)
head(toothGrowth)
tail(toothGrowth)
summary(toothGrowth)
dim(toothGrowth)
sample_size <- length(toothGrowth$len)
sample_size
table(toothGrowth$supp, toothGrowth$dose)
p1 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~supp)
p2 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~dose)
p3 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot()
p4 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot()
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
1
p1
p2
p3
p4
toothGrowth$dose <- as.factor(toothGrowth$dose)
p1
p1 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~supp)
p4 <- ggplot(data=toothGrowth, aes(x=dose,y=len,fill=dose)) +
geom_boxplot()
p1
p4
p2 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot() +
theme(legend.position="none") +
facet_grid(.~dose)
p3 <- ggplot(data=toothGrowth, aes(x=supp,y=len,fill=supp)) +
geom_boxplot()
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
mean_groups <- aggregate(toothGrowth$len,list(toothGrowth$supp,toothGrowth$dose),mean)
mean_groups
sd_group <- aggregate(toothGrowth$len,list(toothGrowth$supp,toothGrowth$dose),sd)
sd_group
ggplot(toothGrowth, aes(x = factor(dose), y = len, fill = factor(dose)))+
geom_boxplot()+
facet_grid(.~supp)+
labs(title = "Tooth Length vs. Dose  by for OJ & VC",
x = "Doses", y = "Tooth Length")
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2, main="Boxplots of the Effect of Vitamin C on Tooth Growth in Guinea Pigs")
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2, main="Boxplots")
grid.arrange("Boxplots", p1, p4, p2, p3, ncol = 2, nrow=2)
grid.arrange("Boxplots", p1, p4, p2, p3, ncol = 2, nrow=3)
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2)
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2 top="Boxplots")
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2, top="Boxplots")
grid.arrange(p1, p4, p2, p3, ncol = 2, nrow=2, top="Boxplots of ToothGrowth Data by Vitamin C Dose and Supplement")
ojdose0.5 <- toothGrowth %>% filter(supp=="OJ" & dose=="0.5")
anova.out <- aov(len ~ supp * dose, data=toothGrowth)
summary(anova.out)
TukeyHSD(anova.out)
confint(anova.out)
print(model.tables(anova.out,"means"),digits=3)
