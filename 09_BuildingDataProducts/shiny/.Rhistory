filter(cran, country == "US" || country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- slect(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size  2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran, correct_size = size + 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
0
library(swirl)
swirl()
submit()
library(swirl)
swirl()
submit()
library(swirl)
submit()
library(swirl)
swirl()
submit(summarize1.R)
submit("summarize1.R"")
submit("summarize1.R")
submit("summarize1.R")
submit("summarize1.R")
submit("summarize1.R")
submit()
library(swirl)
swirl()
submit("summarize1.R")
submit(summarize1.R)
submit(pack_sum)
submit("summarize1.R")
?submit
?save
pack_sum()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, pack_sum$count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit("summarize2.R")
?submit
submit("summarize3.R")
?submit
submit("summarize4.R")
?submit
View(result3)
submit("chain1.R")
?submit
submit("chain2.R")
?submit
submit("chain3.R")
?submit
0
library(swirl)
swirl()
submit("chain3.R")
?submit
submit("chain4.R")
?submit
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex", "class"))
submit("script1.R")
?submit
students3
submit("script2.R")
?submit
?spread
submit("script3.R")
?submit
extract_numeric("class5")
submit("script4.R")
?submit
students4
submit("script5.R")
?submit
submit("script6.R")
?submit
submit("script6.R")
?submit
submit("script7.R")
?submit
passed
failed
?mutate
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
packageVersions("dplyr")
packageVersion("dplyr")
bind_rows(passed, failed)
sat
submit("script8.R")
?submit
submit("script9.R")
?submit
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=2, minutes=31)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with-tz
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
save.image("C:/Users/Anuar Imanbayev/Desktop/DataScienceCourse/DSC_Working_Directory/blank_workspace.RData")
load("C:/Users/Anuar Imanbayev/Desktop/DataScienceCourse/DSC_Working_Directory/blank_workspace.RData")
save.image("C:/Users/Anuar Imanbayev/Desktop/DataScienceCourse/DSC_Working_Directory/.RData")
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q4.R")
w3q3q4()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
?quantile
source("w3q3q5.R")
?quantile
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
install.packages("Hmisc")
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("w3q3q5.R")
w3q3q5()
source("run_analysis.R")
source("plot1.R")
source("plot1.R")
plot1()
source("plot2.R")
source("plot3.R")
source("plot4.R")
source("plot5.R")
source("plot6.R")
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q1.R")
w4q4q1()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q2.R")
w4q4q2()
source("w4q4q3.R")
w4q4q3()
source("w4q4q3.R")
w4q4q3()
source("w4q4q3.R")
w4q4q3()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q4.R")
w4q4q4()
source("w4q4q5.R")
w4q4q5()
install.packages(quantmod)
install.packages(quantmod)
install.packages("quantmod")
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q5.R")
w4q4q5()
source("w4q4q4.R")
w4q4q4()
install.packages("shiny")
library(shiny)
setwd("C:/Users/Anuar Imanbayev/Desktop/DataScienceCourse/DSC_Working_Directory/shiny/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("UsingR")
library(UsingR)
runApp()
runApp()
runApp()
runApp()
runApp(display.mode='showcase')
runApp(display.mode='showcase')
runApp(display.mode='showcase')
runApp(display.mode='showcase')
runApp(display.mode='showcase')
source("manipulate.R")
